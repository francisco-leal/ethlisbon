{
  "address": "0x0c205AAA8E8c16C16eC29278801b871729121007",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stable_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_stable_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9f1b4b1f6aedfc6ae39715f70f7f83ec14c5951c89fa47d58d126ca83a1e17b",
  "receipt": {
    "to": null,
    "from": "0xCe2289B87b80457AC7f07352b25D2576BD6D88D8",
    "contractAddress": "0x0c205AAA8E8c16C16eC29278801b871729121007",
    "transactionIndex": 6,
    "gasUsed": "407550",
    "logsBloom": "0x
    "blockHash": "0x1577e77900dc0194bef01a9e60863ac81943931be786d74397b900b9d3dc07f4",
    "transactionHash": "0xb9f1b4b1f6aedfc6ae39715f70f7f83ec14c5951c89fa47d58d126ca83a1e17b",
    "logs": [],
    "blockNumber": 8995119,
    "cumulativeGasUsed": "976029",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
  ],
  "numDeployments": 1,
  "solcInputHash": "71b164ce3bd2d33fe68ab7c1a30ad768",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stable_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_stable_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pay.sol\":\"Pay\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Pay.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Pay  {\\n  // Stable coin address;\\n  address public _stable_address;\\n  constructor(address stable_address) {\\n    _stable_address = stable_address;\\n  }\\n\\n  function transfer(address from, address to, uint256 amount) public returns (bool) {\\n    require(to != address(0), \\\"transfer to the zero address\\\");\\n    require(amount <= IERC20(_stable_address).balanceOf(from), \\\"transfer amount exceeds balance\\\");\\n\\n    IERC20(_stable_address).transferFrom(from, to, amount);\\n\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0x998b7efec6cca4361a1b6bfcc416ba8c27c56ef8dd4b5ced6d3c07b5bfbf966b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610708380380610708833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6105f1806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634b9c23c91461003b578063beabacc814610059575b600080fd5b610043610089565b60405161005091906102e6565b60405180910390f35b610073600480360381019061006e9190610368565b6100ad565b60405161008091906103d6565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361011d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101149061044e565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161017691906102e6565b602060405180830381865afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610483565b8211156101f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f0906104fc565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016102569392919061052b565b6020604051808303816000875af1158015610275573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610299919061058e565b50600190509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d0826102a5565b9050919050565b6102e0816102c5565b82525050565b60006020820190506102fb60008301846102d7565b92915050565b600080fd5b61030f816102c5565b811461031a57600080fd5b50565b60008135905061032c81610306565b92915050565b6000819050919050565b61034581610332565b811461035057600080fd5b50565b6000813590506103628161033c565b92915050565b60008060006060848603121561038157610380610301565b5b600061038f8682870161031d565b93505060206103a08682870161031d565b92505060406103b186828701610353565b9150509250925092565b60008115159050919050565b6103d0816103bb565b82525050565b60006020820190506103eb60008301846103c7565b92915050565b600082825260208201905092915050565b7f7472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b6000610438601c836103f1565b915061044382610402565b602082019050919050565b600060208201905081810360008301526104678161042b565b9050919050565b60008151905061047d8161033c565b92915050565b60006020828403121561049957610498610301565b5b60006104a78482850161046e565b91505092915050565b7f7472616e7366657220616d6f756e7420657863656564732062616c616e636500600082015250565b60006104e6601f836103f1565b91506104f1826104b0565b602082019050919050565b60006020820190508181036000830152610515816104d9565b9050919050565b61052581610332565b82525050565b600060608201905061054060008301866102d7565b61054d60208301856102d7565b61055a604083018461051c565b949350505050565b61056b816103bb565b811461057657600080fd5b50565b60008151905061058881610562565b92915050565b6000602082840312156105a4576105a3610301565b5b60006105b284828501610579565b9150509291505056fea2646970667358221220449a017e7fbe0a4498ec91c8b504d5195319b296d2e6b3b4d1b441bab68e77f764736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634b9c23c91461003b578063beabacc814610059575b600080fd5b610043610089565b60405161005091906102e6565b60405180910390f35b610073600480360381019061006e9190610368565b6100ad565b60405161008091906103d6565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361011d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101149061044e565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161017691906102e6565b602060405180830381865afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610483565b8211156101f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f0906104fc565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016102569392919061052b565b6020604051808303816000875af1158015610275573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610299919061058e565b50600190509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d0826102a5565b9050919050565b6102e0816102c5565b82525050565b60006020820190506102fb60008301846102d7565b92915050565b600080fd5b61030f816102c5565b811461031a57600080fd5b50565b60008135905061032c81610306565b92915050565b6000819050919050565b61034581610332565b811461035057600080fd5b50565b6000813590506103628161033c565b92915050565b60008060006060848603121561038157610380610301565b5b600061038f8682870161031d565b93505060206103a08682870161031d565b92505060406103b186828701610353565b9150509250925092565b60008115159050919050565b6103d0816103bb565b82525050565b60006020820190506103eb60008301846103c7565b92915050565b600082825260208201905092915050565b7f7472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b6000610438601c836103f1565b915061044382610402565b602082019050919050565b600060208201905081810360008301526104678161042b565b9050919050565b60008151905061047d8161033c565b92915050565b60006020828403121561049957610498610301565b5b60006104a78482850161046e565b91505092915050565b7f7472616e7366657220616d6f756e7420657863656564732062616c616e636500600082015250565b60006104e6601f836103f1565b91506104f1826104b0565b602082019050919050565b60006020820190508181036000830152610515816104d9565b9050919050565b61052581610332565b82525050565b600060608201905061054060008301866102d7565b61054d60208301856102d7565b61055a604083018461051c565b949350505050565b61056b816103bb565b811461057657600080fd5b50565b60008151905061058881610562565b92915050565b6000602082840312156105a4576105a3610301565b5b60006105b284828501610579565b9150509291505056fea2646970667358221220449a017e7fbe0a4498ec91c8b504d5195319b296d2e6b3b4d1b441bab68e77f764736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/Pay.sol:Pay",
        "label": "_stable_address",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}