{
  "language": "Solidity",
  "sources": {
    "contracts/Slice.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract Slice {\n    mapping(address => address) eoaToSafe;\n\n    event SafeSet(address safe, address signer);\n\n    function setSafe(address safe, address signer) public {\n        eoaToSafe[signer] = safe;\n        emit SafeSet(safe, signer);\n    }\n\n    function getSafe(address signer) public view returns (address) {\n        return eoaToSafe[signer];\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}